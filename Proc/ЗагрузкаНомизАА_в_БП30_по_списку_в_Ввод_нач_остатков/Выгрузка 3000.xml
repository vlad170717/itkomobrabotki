<?xml version="1.0" encoding="UTF-8"?>
<ФайлОбмена ВерсияФормата="2.0" ДатаВыгрузки="2020-08-20T12:37:02" НачалоПериодаВыгрузки="0001-01-01T00:00:00" ОкончаниеПериодаВыгрузки="0001-01-01T00:00:00" ИмяКонфигурацииИсточника="Автосалон5" ИмяКонфигурацииПриемника="БухгалтерияПредприятия" ИдПравилКонвертации="29f7a4b1-9fff-467a-8638-7ddef107a4eb" Комментарий="">
<ПравилаОбмена>
	<ВерсияФормата>2.01</ВерсияФормата>
	<Ид>29f7a4b1-9fff-467a-8638-7ddef107a4eb</Ид>
	<Наименование>Автосалон5 --&gt; БухгалтерияПредприятия 3.0 ИП</Наименование>
	<ДатаВремяСоздания>2020-08-20T12:36:56</ДатаВремяСоздания>
	<Источник>Автосалон5</Источник>
	<Приемник>БухгалтерияПредприятия</Приемник>
	<Параметры>
		<Параметр Имя="КодГруппыПокупателей" Наименование="Код группы поставщиков"/>
		<Параметр Имя="КодГруппыПоставщиков" Наименование="Код группы покупателей"/>
		<Параметр Имя="КодГруппыТоваров" Наименование="Код группы товаров"/>
		<Параметр Имя="КодГруппыУслуг" Наименование="Код группы услуг"/>
		<Параметр Имя="КодГруппыУСН" Наименование="Код группы УСН"/>
		<Параметр Имя="КодНоменклатурнойГруппыТоваров" Наименование="КодНоменклатурнойГруппыТоваров"/>
		<Параметр Имя="КодНоменклатурнойГруппыУслуги" Наименование="КодНоменклатурнойГруппыУслуги"/>
		<Параметр Имя="КодНоменклатурнойГруппыУСН" Наименование="КодНоменклатурнойГруппыУСН"/>
		<Параметр Имя="кодОООАльфаМобил" Наименование="кодОООАльфаМобил"/>
		<Параметр Имя="КодОсновногоСклада" Наименование="КодОсновногоСклада"/>
		<Параметр Имя="кодСкладаКомиссия" Наименование="кодСкладаКомиссия"/>
	</Параметры>
	<Обработки/>
	<ПравилаКонвертацииОбъектов>
		<Правило>
			<Код>Номенклатура</Код>
			<ПослеЗагрузки>Если Не Объект.ЭтоГруппа Тогда
	Если Найти(Объект.Комментарий, "#УСН#") &gt; 0 Тогда
		ГруппаУСН = Справочники.Номенклатура.НайтиПоКоду(Параметры.КодГруппыУСН);
		Если Не ГруппаУСН.Пустая() И ГруппаУСН.ЭтоГруппа Тогда
			Объект.Родитель = ГруппаУСН;
		КонецЕсли;
		НомГруппаУСН = Справочники.НоменклатурныеГруппы.НайтиПоКоду(Параметры.КодНоменклатурнойГруппыУСН);
		Если Не НомГруппаУСН.Пустая() Тогда
			Объект.НоменклатурнаяГруппа = НомГруппаУСН;
		КонецЕсли;
	Иначе
		ГруппаТоваров = Справочники.Номенклатура.НайтиПоКоду(Параметры.КодГруппыТоваров);
		Если Не ГруппаТоваров.Пустая() И ГруппаТоваров.ЭтоГруппа Тогда
			Объект.Родитель = ГруппаТоваров;
		КонецЕсли;
		НомГруппаТоваров = Справочники.НоменклатурныеГруппы.НайтиПоКоду(Параметры.КодНоменклатурнойГруппыТоваров);
		Если Не НомГруппаТоваров.Пустая() Тогда
			Объект.НоменклатурнаяГруппа = НомГруппаТоваров;
		КонецЕсли;
	КонецЕсли;		
	Объект.Комментарий  = СтрЗаменить(Объект.Комментарий, "#УСН#", "");
	Объект.Наименование = СокрЛП(Объект.Артикул) + ", " + СокрЛП(Объект.Наименование);
	Объект.ВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товары");
КонецЕсли;</ПослеЗагрузки>
			<ПоследовательностьПолейПоиска>  //Артикул         = СокрЛП(СвойстваПоиска.Получить("Артикул"));
  Код         = СокрЛП(СвойстваПоиска.Получить("Код"));
	Наименование    = СокрЛП(СвойстваПоиска.Получить("Наименование"));	
	УСН             = СвойстваПоиска.Получить("");
	Услуга          = СвойстваПоиска.Получить("Услуга");
	Если НомерВариантаПоиска = 1 Тогда
		//СсылкаНаОбъект = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", Артикул);
		СсылкаНаОбъект = Справочники.Номенклатура.НайтиПоКоду(Код);
		//Если СсылкаНаОбъект.Пустая() Тогда
		//	СсылкаНаОбъект = Справочники.Номенклатура.НайтиПоНаименованию(Артикул + ", " + Наименование);
		//КонецЕсли;
		//Если СсылкаНаОбъект.Пустая() Тогда
		//	СсылкаНаОбъект = Справочники.Номенклатура.НайтиПоНаименованию(Артикул + " " + Наименование);
		//КонецЕсли;	
		Если СсылкаНаОбъект.Пустая() Тогда
			СсылкаНаОбъект = Неопределено;
		КонецЕсли;	
		СвойстваПоиска.Удалить("");
		ПрекратитьПоиск = Истина;
	КонецЕсли;</ПоследовательностьПолейПоиска>
			<НеЗамещать>true</НеЗамещать>
			<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
			<Источник>СправочникСсылка.Номенклатура</Источник>
			<Приемник>СправочникСсылка.Номенклатура</Приемник>
		</Правило>
		<Правило>
			<Код>КлассификаторЕдиницИзмерения</Код>
			<НеЗамещать>true</НеЗамещать>
			<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
			<Источник>СправочникСсылка.КлассификаторЕдиницИзмерения</Источник>
			<Приемник>СправочникСсылка.КлассификаторЕдиницИзмерения</Приемник>
		</Правило>
		<Правило>
			<Код>КлассификаторСтранМира</Код>
			<НеЗамещать>true</НеЗамещать>
			<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
			<Источник>СправочникСсылка.КлассификаторСтранМира</Источник>
			<Приемник>СправочникСсылка.СтраныМира</Приемник>
		</Правило>
		<Правило>
			<Код>Валюты</Код>
			<НеЗамещать>true</НеЗамещать>
			<Источник>СправочникСсылка.Валюты</Источник>
			<Приемник>СправочникСсылка.Валюты</Приемник>
		</Правило>
		<Правило>
			<Код>Контрагенты</Код>
			<ПослеЗагрузки>Объект.СтранаРегистрации = Справочники.СтраныМира.НайтиПоНаименованию("РОССИЯ", Истина);
Если Не Объект.ЭтоГруппа Тогда	
	Если Найти(Объект.Комментарий, "#Поставщик#") &gt; 0 Тогда
		ГруппаПоставщиков = Справочники.Контрагенты.НайтиПоКоду(Параметры.КодГруппыПоставщиков);
		Если Не ГруппаПоставщиков.Пустая() И ГруппаПоставщиков.ЭтоГруппа Тогда
			Объект.Родитель = ГруппаПоставщиков;
		КонецЕсли;			
	Иначе	
		ГруппаПокупателей = Справочники.Контрагенты.НайтиПоКоду(Параметры.КодГруппыПокупателей);
		Если Не ГруппаПокупателей.Пустая() И ГруппаПокупателей.ЭтоГруппа Тогда
			Объект.Родитель = ГруппаПокупателей;
		КонецЕсли;				
	КонецЕсли;
	Объект.Комментарий = СтрЗаменить(Объект.Комментарий, "#Поставщик#", "");
	Объект.Комментарий = СтрЗаменить(Объект.Комментарий, "#Покупатель#", "");  	
КонецЕсли;</ПослеЗагрузки>
			<ПоследовательностьПолейПоиска>Если НомерВариантаПоиска  = 1 Тогда
	ИНН = СвойстваПоиска.Получить("ИНН");
	Если ЗначениеЗаполнено(ИНН) Тогда
		СтрокаИменСвойствПоиска = "ИНН"; 
	Иначе
		СтрокаИменСвойствПоиска = "Наименование"; 
	КонецЕсли;	
	//СсылкаНаОбъект = Неопределено;
	//ПрекратитьПоиск  = Истина;	
КонецЕсли;</ПоследовательностьПолейПоиска>
			<Источник>СправочникСсылка.Контрагенты</Источник>
			<Приемник>СправочникСсылка.Контрагенты</Приемник>
		</Правило>
		<Правило>
			<Код>Организации</Код>
			<Источник>СправочникСсылка.Организации</Источник>
			<Приемник>СправочникСсылка.Организации</Приемник>
		</Правило>
		<Правило>
			<Код>БанковскиеСчета</Код>
			<НеЗамещать>true</НеЗамещать>
			<Источник>СправочникСсылка.БанковскиеСчета</Источник>
			<Приемник>СправочникСсылка.БанковскиеСчета</Приемник>
		</Правило>
		<Правило>
			<Код>Банки</Код>
			<НеЗамещать>true</НеЗамещать>
			<Источник>СправочникСсылка.Банки</Источник>
			<Приемник>СправочникСсылка.Банки</Приемник>
		</Правило>
		<Правило>
			<Код>КонтрагентыПоКоду</Код>
			<Приемник>СправочникСсылка.Контрагенты</Приемник>
		</Правило>
		<Правило>
			<Код>НоменклатураПоКоду</Код>
			<НеЗамещать>true</НеЗамещать>
			<Приемник>СправочникСсылка.Номенклатура</Приемник>
		</Правило>
		<Правило>
			<Код>Автоработы</Код>
			<ПослеЗагрузки>Объект.ВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Услуги ЕНВД");
ГруппаНоменклатуры = Справочники.Номенклатура.НайтиПоКоду(Параметры.КодГруппыУслуг);
Если ГруппаНоменклатуры.ЭтоГруппа Тогда
	Объект.Родитель = ГруппаНоменклатуры;
Иначе	
	Объект.Родитель = Справочники.Номенклатура.ПустаяСсылка();
КонецЕсли;
НомГруппаУслуги = Справочники.НоменклатурныеГруппы.НайтиПоКоду(Параметры.КодНоменклатурнойГруппыУслуги);
Если Не НомГруппаУслуги.Пустая() Тогда
	Объект.НоменклатурнаяГруппа = НомГруппаУслуги;
КонецЕсли;</ПослеЗагрузки>
			<ПоследовательностьПолейПоиска>
Артикул = СвойстваПоиска.Получить("Артикул");
Если НомерВариантаПоиска  = 1 Тогда
	РодительСсылка = Справочники.Номенклатура.НайтиПоКоду(Параметры.КодГруппыУслуг);
	СсылкаНаОбъект = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", Артикул, РодительСсылка);
	Если СсылкаНаОбъект.Пустая() Тогда
		СсылкаНаОбъект = Неопределено;
	КонецЕсли;
	ПрекратитьПоиск = Истина;
КонецЕсли;</ПоследовательностьПолейПоиска>
			<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
			<Источник>СправочникСсылка.Автоработы</Источник>
			<Приемник>СправочникСсылка.Номенклатура</Приемник>
		</Правило>
		<Правило>
			<Код>КлассификаторЕдиницИзмеренияПоНаменованию</Код>
			<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
			<Приемник>СправочникСсылка.КлассификаторЕдиницИзмерения</Приемник>
		</Правило>
		<Правило>
			<Код>НоменклатураУслуги</Код>
			<Приемник>СправочникСсылка.Номенклатура</Приемник>
		</Правило>
		<Правило>
			<Код>КлассификатСтранМира</Код>
			<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
			<Источник>СправочникСсылка.КлассификаторСтранМира</Источник>
			<Приемник>СправочникСсылка.СтраныМира</Приемник>
		</Правило>
		<Правило>
			<Код>ПоступлениеТоваровУслуг</Код>
			<ПередЗагрузкой>РежимЗаписи  = "Запись";</ПередЗагрузкой>
			<ПриЗагрузке>РежимЗаписи  = "Запись";</ПриЗагрузке>
			<ПослеЗагрузки>Объект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
Объект.СчетУчетаРасчетовПоАвансам = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданным;

//Объект.СчетНаОплатуПоставщика = Документы.СчетНаОплатуПоставщика.НайтиПоНомеру(Объект.Номер,Объект.Дата);
Объект.Склад = Справочники.Склады.НайтиПоКоду(Параметры.КодОсновногоСклада);
Договор = Справочники.ДоговорыКонтрагентов.НайтиПоРеквизиту("ВидДоговора",Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком,,Объект.Контрагент);
Если НЕ Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка() Тогда
	Объект.ДоговорКонтрагента = Договор;
	Сообщить("Договор найден: "+Объект.Контрагент.Комментарий+" Наим:"+Договор.Наименование);
Иначе
	Объект.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	Сообщить("Договор не найден: "+Объект.Контрагент.Комментарий);
КонецЕсли;

Документы.РеализацияТоваровУслуг.ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, "Товары");</ПослеЗагрузки>
			<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
			<Источник>ДокументСсылка.ПоступлениеТоваров</Источник>
			<Приемник>ДокументСсылка.ПоступлениеТоваровУслуг</Приемник>
		</Правило>
		<Правило>
			<Код>СчетНаОплатуПокупателю</Код>
			<ПередЗагрузкой>РежимЗаписи  = "Запись";</ПередЗагрузкой>
			<ПриЗагрузке>РежимЗаписи  = "Запись";</ПриЗагрузке>
			<ПослеЗагрузки>//Объект.Склад = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойСклад");
Объект.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.НайтиПоРеквизиту("ВидДоговора",Перечисления.ВидыДоговоровКонтрагентов.СПокупателем,,Объект.Контрагент);</ПослеЗагрузки>
			<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
			<Источник>ДокументСсылка.СчетНаОплату</Источник>
			<Приемник>ДокументСсылка.СчетНаОплатуПокупателю</Приемник>
		</Правило>
		<Правило>
			<Код>ОтчетОРозничныхПродажах</Код>
			<ПередЗагрузкой>РежимЗаписи  = "Запись";</ПередЗагрузкой>
			<ПриЗагрузке>РежимЗаписи  = "Запись";</ПриЗагрузке>
			<ПослеЗагрузки>Если Найти(Объект.Комментарий,"Товары НДС#") = 0 И Найти(Объект.Комментарий,"Возвраты НДС#") = 0 Тогда
	Объект.Склад = Справочники.Склады.НайтиПоКоду(Параметры.КодОсновногоСклада);
	Объект.ДокументБезНДС = Истина;
Иначе
	Объект.Склад = Справочники.Склады.НайтиПоКоду(Параметры.кодСкладаКомиссия);
	Объект.ДокументБезНДС = Ложь;
КонецЕсли;

Объект.ДополнительныеСвойства.Вставить("ЗаполнитьСчетаУчетаПередЗаписью", Истина);
СчетаУчетаВДокументах.ЗаполнитьПередЗаписью(Объект, РежимЗаписиДокумента.Запись);</ПослеЗагрузки>
			<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
			<Приемник>ДокументСсылка.ОтчетОРозничныхПродажах</Приемник>
		</Правило>
		<Правило>
			<Код>РеализацияТоваровУслуг</Код>
			<ПередЗагрузкой>РежимЗаписи  = "Запись";</ПередЗагрузкой>
			<ПриЗагрузке>РежимЗаписи  = "Запись";</ПриЗагрузке>
			<ПослеЗагрузки>Объект.ДоговорКонтрагента = Объект.Контрагент.ОсновнойДоговорКонтрагента;
ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ОБъект, глЗначениеПеременной("глТекущийПользователь"), Константы.ВалютаРегламентированногоУчета.Получить(), "Продажа");
Объект.Склад = Справочники.Склады.НайтиПоНаименованию("Цветочная НДС");
Для каждого СтрокаТоваров Из Объект.Товары Цикл
  ОбработкаТабличныхЧастей.ЗаполнитьНомерГТДИСтрануПроисхождения(СтрокаТоваров, Ложь, Объект.Организация, Объект.Дата);
  ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТоваров, Объект);
    Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрокаТоваров, "Товары", Истина);
КонецЦикла;</ПослеЗагрузки>
			<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
			<Приемник>ДокументСсылка.РеализацияТоваровУслуг</Приемник>
		</Правило>
		<Правило>
			<Код>ПоступлениеТоваровУслугТоварыООО</Код>
			<ПередЗагрузкой>РежимЗаписи  = "Запись";</ПередЗагрузкой>
			<ПриЗагрузке>РежимЗаписи  = "Запись";</ПриЗагрузке>
			<ПослеЗагрузки>Объект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
Объект.СчетУчетаРасчетовПоАвансам = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданным;
Если ПараметрыОбъекта["ЧекСНДС"] Тогда
	Объект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами;
	Объект.НДСВключенВСтоимость = Истина;
	Объект.СуммаВключаетНДС = Истина;
	Объект.НДСНеВыделять = Ложь;
	Объект.Склад = Справочники.Склады.НайтиПоКоду(Параметры.кодСкладаКомиссия);
	Сообщить("склад "+Объект.Склад);
	Объект.ДоговорКонтрагента = 
	     Справочники.ДоговорыКонтрагентов.НайтиПоРеквизиту("ВидДоговора",Перечисления.ВидыДоговоровКонтрагентов.СКомитентом,,Объект.Контрагент);
	 Документы.ПоступлениеТоваровУслуг.ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, "Товары");
Иначе // чек с товарами ООО, не без	НДС
	Объект.Склад = Справочники.Склады.НайтиПоКоду(Параметры.КодОсновногоСклада);
	Сообщить("склад "+Объект.Склад);
	Объект.ДоговорКонтрагента = 
	     Справочники.ДоговорыКонтрагентов.НайтиПоРеквизиту("ВидДоговора",Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком,,Объект.Контрагент);
	Документы.ПоступлениеТоваровУслуг.ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, "Товары");
	 
КонецЕсли;</ПослеЗагрузки>
			<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
			<Приемник>ДокументСсылка.ПоступлениеТоваровУслуг</Приемник>
		</Правило>
		<Правило>
			<Код>ОООПродаетКлиентамТоварИПСчетПокупателю</Код>
			<Приемник>ДокументСсылка.СчетНаОплатуПокупателю</Приемник>
		</Правило>
		<Правило>
			<Код>ВозвратТоваровОтПокупателя</Код>
			<ПередЗагрузкой>РежимЗаписи  = "Запись";</ПередЗагрузкой>
			<ПриЗагрузке>РежимЗаписи  = "Запись";</ПриЗагрузке>
			<ПослеЗагрузки>//ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ОБъект, глЗначениеПеременной("глТекущийПользователь"), Константы.ВалютаРегламентированногоУчета.Получить(), "Продажа");
Если Найти(Объект.Комментарий,"Товары НДС#") = 0 Тогда
	Объект.Склад = Справочники.Склады.НайтиПоКоду(Параметры.КодОсновногоСклада);
Иначе
	Объект.Склад = Справочники.Склады.НайтиПоКоду(Параметры.кодСкладаКомиссия,Истина);
КонецЕсли;
Объект.Контрагент = Справочники.Контрагенты.НайтиПоНаименованию("физическое лицо");

Объект.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.НайтиПоРеквизиту("ВидДоговора",Перечисления.ВидыДоговоровКонтрагентов.СПокупателем,,Объект.Контрагент);
Документы.ВозвратТоваровОтПокупателя.ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект,"Товары");</ПослеЗагрузки>
			<ГенерироватьНовыйНомерИлиКодЕслиНеУказан>true</ГенерироватьНовыйНомерИлиКодЕслиНеУказан>
			<Приемник>ДокументСсылка.ВозвратТоваровОтПокупателя</Приемник>
		</Правило>
		<Правило>
			<Код>СтавкиНДС</Код>
			<Источник>СправочникСсылка.СтавкиНДС</Источник>
			<Приемник>ПеречислениеСсылка.СтавкиНДС</Приемник>
		</Правило>
		<Правило>
			<Код>ВидыОперацийПоступлениеТоваровУслуг</Код>
			<Источник>СправочникСсылка.ХозОперации</Источник>
			<Приемник>ПеречислениеСсылка.ВидыОперацийПоступлениеТоваровУслуг</Приемник>
		</Правило>
		<Правило>
			<Код>ЮридическоеФизическоеЛицо</Код>
			<Источник>ПеречислениеСсылка.ФормыСобственности</Источник>
			<Приемник>ПеречислениеСсылка.ЮридическоеФизическоеЛицо</Приемник>
		</Правило>
	</ПравилаКонвертацииОбъектов>
	<ПравилаОчисткиДанных/>
	<Алгоритмы/>
	<Запросы/>
</ПравилаОбмена>
<ЗначениеПараметра Имя="КодГруппыПокупателей" Тип="Строка">
	<Значение>00-000005</Значение>
</ЗначениеПараметра>
<ЗначениеПараметра Имя="КодГруппыПоставщиков" Тип="Строка">
	<Значение>00-000003</Значение>
</ЗначениеПараметра>
<ЗначениеПараметра Имя="КодГруппыТоваров" Тип="Строка">
	<Значение>00-00000001</Значение>
</ЗначениеПараметра>
<ЗначениеПараметра Имя="КодГруппыУслуг" Тип="Строка">
	<Значение>00-00000003</Значение>
</ЗначениеПараметра>
<ЗначениеПараметра Имя="КодГруппыУСН" Тип="Строка">
	<Значение>00-00000002</Значение>
</ЗначениеПараметра>
<ЗначениеПараметра Имя="КодНоменклатурнойГруппыТоваров" Тип="Строка">
	<Значение>00-000002</Значение>
</ЗначениеПараметра>
<ЗначениеПараметра Имя="КодНоменклатурнойГруппыУслуги" Тип="Строка">
	<Значение>00-000004</Значение>
</ЗначениеПараметра>
<ЗначениеПараметра Имя="КодНоменклатурнойГруппыУСН" Тип="Строка">
	<Значение>00-000003</Значение>
</ЗначениеПараметра>
<ЗначениеПараметра Имя="кодОООАльфаМобил" Тип="Строка">
	<Значение>ЦБ002462</Значение>
</ЗначениеПараметра>
<ЗначениеПараметра Имя="КодОсновногоСклада" Тип="Строка">
	<Значение>00-000001</Значение>
</ЗначениеПараметра>
<ЗначениеПараметра Имя="кодСкладаКомиссия" Тип="Строка">
	<Значение>00-000002</Значение>
</ЗначениеПараметра>
<Объект Нпп="2" Тип="СправочникСсылка.Номенклатура" ИмяПравила="НоменклатураПоКоду" НеЗамещать="true"><Ссылка><Свойство Имя="Код" Тип="Строка">
	<Значение>00-00000001</Значение>
</Свойство><Свойство Имя="ЭтоГруппа" Тип="Булево">
	<Значение>true</Значение>
</Свойство>
</Ссылка>
</Объект>
<Объект Нпп="3" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения" ИмяПравила="КлассификаторЕдиницИзмерения" НеЗамещать="true"><Ссылка Нпп="3">
	<Свойство Имя="Наименование" Тип="Строка">
		<Значение>шт</Значение>
	</Свойство>
</Ссылка>
	<Свойство Имя="Код" Тип="Строка">
		<Значение>796</Значение>
	</Свойство>
</Объект>
<Объект Нпп="1" Тип="СправочникСсылка.Номенклатура" ИмяПравила="Номенклатура" НеЗамещать="true"><Ссылка Нпп="1"><Свойство Имя="Родитель" Тип="СправочникСсылка.Номенклатура"><Ссылка><Свойство Имя="Код" Тип="Строка">
	<Значение>00-00000001</Значение>
</Свойство><Свойство Имя="ЭтоГруппа" Тип="Булево">
	<Значение>true</Значение>
</Свойство>
</Ссылка>
</Свойство>
	<Свойство Имя="ЭтоГруппа" Тип="Булево">
		<Значение>false</Значение>
	</Свойство><Свойство Имя="Услуга" Тип="Булево">
	<Значение>false</Значение>
</Свойство><Свойство Имя="" Тип="Булево">
	<Значение>false</Значение>
</Свойство>
	<Свойство Имя="Код" Тип="Строка">
		<Значение>ЦБ000068</Значение>
	</Свойство>
</Ссылка>
	<Свойство Имя="Артикул" Тип="Строка">
		<Значение>14590787</Значение>
	</Свойство><Свойство Имя="ЕдиницаИзмерения" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"><Ссылка Нпп="3">
	<Свойство Имя="Наименование" Тип="Строка">
		<Значение>шт</Значение>
	</Свойство>
</Ссылка>
</Свойство><Свойство Имя="Комментарий" Тип="Строка">
	<Пусто/>
</Свойство>
	<Свойство Имя="Наименование" Тип="Строка">
		<Значение>Клипса</Значение>
	</Свойство>
	<Свойство Имя="НаименованиеПолное" Тип="Строка">
		<Значение>Клипса</Значение>
	</Свойство>
	<Свойство Имя="ПометкаУдаления" Тип="Булево">
		<Значение>false</Значение>
	</Свойство><Свойство Имя="СтранаПроисхождения" Тип="СправочникСсылка.СтраныМира">
	<Пусто/>
</Свойство>
</Объект>
</ФайлОбмена>
